#include <SPI.h>
#include <MFRC522.h>

// Pinos conectados ao RC522
#define SS_PIN 5     // SDA do RC522
#define RST_PIN 22   // RST do RC522

MFRC522 rfid(SS_PIN, RST_PIN); // cria o objeto do leitor

//TODO : Adicionar a parte do Curupira, a funcao de eliminar cartas(nao sei se e no esp do diller ou do jogador) e a parte de comprar moedas(essa sim e do diller)
int coins=5; // Variável para armazenar a quantidade de moedas
int boto=3; // Valor da carta Boto
int saci=-3; // Valor da carta Saci
int curupira=-2; // Valor da carta Curupira
struct CardsState{
    bool Boto=false; // Variável para armazenar o estado da carta boto cor de rosa
    bool Saci=true; // Variável para armazenar o estado da carta saci
    bool Curupira=false; // Variável para armazenar o estado da carta curupira
    bool draw=false; // Variável para armazenar o estado da compra
};
CardsState cards; // Cria uma instância da estrutura Cards

int carta=0; // Variável para armazenar o valor da carta comprada

void setup() {
  Serial.begin(9600);
  SPI.begin();                // Inicia SPI com GPIOs padrão do ESP32
  rfid.PCD_Init();         // Inicia o RC522
  delay(1000);
  Serial.println("Aproxime um cartão RFID...");
}

//! Parte do codigo que trata das moedas pelas cartas
void loop() 
{
    const int maxcoins = 10;

if (!rfid.PICC_IsNewCardPresent()) return;
if (!rfid.PICC_ReadCardSerial()) return;

//* Parte do Boto
if (cards.Boto) 
{
  if (coins < maxcoins) // Se a carta for Boto e moedas forem menores que 10
        coins += boto;// Adiciona o valor da carta Boto
    if (coins > maxcoins) // Garante que não ultrapasse o máximo
    {
      coins = maxcoins; // Reseta as moedas para 10 se exceder o limite
      Serial.println("Você não pode comprar mais moedas, pois já tem o máximo permitido.");
      Serial.println(coins); // Mostra que está no limite
    }
      Serial.println(coins); // Mostra a quantidade de moedas após a compra
      Serial.print("Quantidade de moedas: ");
    
    {
    }
}
//* Parte do Saci
if (cards.Saci) 
{
   if (coins >= 3) {
    coins -= 3;
    
    //todo : Adicionar funcao para eliminar uma carta do jogo

    Serial.println("Carta Saci ativada! Você gastou 3 moedas para eliminar uma carta.");
    Serial.print("Quantidade de moedas: ");
    Serial.println(coins);
  } else {
    Serial.println("Você não tem moedas suficientes para usar a carta Saci.");
    Serial.print("Quantidade de moedas: ");
    Serial.println(coins);
  }
}
 delay(2500); // Espera antes de ler novamente

  
}
